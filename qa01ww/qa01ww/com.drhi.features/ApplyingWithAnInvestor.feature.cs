// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace qa01ww.Com_Drhi_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Assignment of Rights", new string[] {
            "Aor_external",
            "Browser_Chrome",
            "Regression"}, SourceFile="com.drhi.features\\ApplyingWithAnInvestor.feature", SourceLine=2)]
    public partial class AssignmentOfRightsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ApplyingWithAnInvestor.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Assignment of Rights", null, ProgrammingLanguage.CSharp, new string[] {
                        "Aor_external",
                        "Browser_Chrome",
                        "Regression"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
testRunner.Given("I have completed the first page of the application form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
testRunner.When("I apply as an Investor with UA641213 as URIR", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
        }
        
        public virtual void CompleteFormWithAnInvestor(string mcsNumber, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Complete form with an investor", exampleTags);
#line 10
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 11
testRunner.When(string.Format("I enter {0} for a given technology", mcsNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
testRunner.And("I create a deemed application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
testRunner.And("I click on Start application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
testRunner.And("I complete the second page of the application form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
testRunner.And("I click submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
testRunner.Then("application  In-Review message should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Complete form with an investor, A", SourceLine=18)]
        public virtual void CompleteFormWithAnInvestor_A()
        {
#line 10
this.CompleteFormWithAnInvestor("A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Complete form with an investor, B", SourceLine=18)]
        public virtual void CompleteFormWithAnInvestor_B()
        {
#line 10
this.CompleteFormWithAnInvestor("B", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Complete form with an investor, C", SourceLine=18)]
        public virtual void CompleteFormWithAnInvestor_C()
        {
#line 10
this.CompleteFormWithAnInvestor("C", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Complete form with an investor, G", SourceLine=18)]
        public virtual void CompleteFormWithAnInvestor_G()
        {
#line 10
this.CompleteFormWithAnInvestor("G", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Complete form with an investor, W", SourceLine=18)]
        public virtual void CompleteFormWithAnInvestor_W()
        {
#line 10
this.CompleteFormWithAnInvestor("W", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Complete form with an investor, X", SourceLine=18)]
        public virtual void CompleteFormWithAnInvestor_X()
        {
#line 10
this.CompleteFormWithAnInvestor("X", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Complete form with an investor, S", SourceLine=18)]
        public virtual void CompleteFormWithAnInvestor_S()
        {
#line 10
this.CompleteFormWithAnInvestor("S", ((string[])(null)));
#line hidden
        }
        
        public virtual void DoNotRejectApplicationWhenOwnMoneyNotUsed(string mcsNumber, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Do not reject application when own money not used", exampleTags);
#line 28
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 29
testRunner.When(string.Format("I enter {0} for a given technology", mcsNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
testRunner.When("I answer NO for own money used", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
testRunner.And("I create a deemed application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
testRunner.And("I click on Start application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
testRunner.Then("applicant should not be rejected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Do not reject application when own money not used, A", SourceLine=35)]
        public virtual void DoNotRejectApplicationWhenOwnMoneyNotUsed_A()
        {
#line 28
this.DoNotRejectApplicationWhenOwnMoneyNotUsed("A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Do not reject application when own money not used, B", SourceLine=35)]
        public virtual void DoNotRejectApplicationWhenOwnMoneyNotUsed_B()
        {
#line 28
this.DoNotRejectApplicationWhenOwnMoneyNotUsed("B", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Do not reject application when own money not used, C", SourceLine=35)]
        public virtual void DoNotRejectApplicationWhenOwnMoneyNotUsed_C()
        {
#line 28
this.DoNotRejectApplicationWhenOwnMoneyNotUsed("C", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Do not reject application when own money not used, G", SourceLine=35)]
        public virtual void DoNotRejectApplicationWhenOwnMoneyNotUsed_G()
        {
#line 28
this.DoNotRejectApplicationWhenOwnMoneyNotUsed("G", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Do not reject application when own money not used, H", SourceLine=35)]
        public virtual void DoNotRejectApplicationWhenOwnMoneyNotUsed_H()
        {
#line 28
this.DoNotRejectApplicationWhenOwnMoneyNotUsed("H", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Do not reject application when own money not used, W", SourceLine=35)]
        public virtual void DoNotRejectApplicationWhenOwnMoneyNotUsed_W()
        {
#line 28
this.DoNotRejectApplicationWhenOwnMoneyNotUsed("W", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Do not reject application when own money not used, X", SourceLine=35)]
        public virtual void DoNotRejectApplicationWhenOwnMoneyNotUsed_X()
        {
#line 28
this.DoNotRejectApplicationWhenOwnMoneyNotUsed("X", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Do not reject application when own money not used, S", SourceLine=35)]
        public virtual void DoNotRejectApplicationWhenOwnMoneyNotUsed_S()
        {
#line 28
this.DoNotRejectApplicationWhenOwnMoneyNotUsed("S", ((string[])(null)));
#line hidden
        }
        
        public virtual void DoNotAutoAccreditApplicantApplyingAsInvestor(string mcsNumber, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Do not Auto accredit applicant  applying as Investor", exampleTags);
#line 45
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 46
testRunner.When(string.Format("I enter {0} for a given technology", mcsNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
testRunner.And("I create a deemed application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
testRunner.And("I click on Start application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.And("I complete the second page of the application form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.And("I click submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
testRunner.Then("application should not be Auto accredited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Do not Auto accredit applicant  applying as Investor, s", SourceLine=53)]
        public virtual void DoNotAutoAccreditApplicantApplyingAsInvestor_S()
        {
#line 45
this.DoNotAutoAccreditApplicantApplyingAsInvestor("s", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Do not Auto accredit applicant  applying as Investor, k", SourceLine=53)]
        public virtual void DoNotAutoAccreditApplicantApplyingAsInvestor_K()
        {
#line 45
this.DoNotAutoAccreditApplicantApplyingAsInvestor("k", ((string[])(null)));
#line hidden
        }
        
        public virtual void ApplyForMMSPWithoutBankDetails(string mcsNumber, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apply for MMSP  without bank details", exampleTags);
#line 58
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 59
testRunner.When(string.Format("I enter {0} for a given technology", mcsNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
testRunner.And("I create a deemed application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
testRunner.And("I click on Start application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
testRunner.And("I complete the second page of the application form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
testRunner.And("I click submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
testRunner.Then("application  In-Review message should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 65
testRunner.When("I click Sign-In button on Homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
testRunner.And("I enter Username and Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
testRunner.When("I click Sign-In into MyRhi", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
testRunner.Then("I should be logged into the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 69
testRunner.And("the Bank details button should be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
testRunner.When("I register for mmsp", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
testRunner.Then("bank details button should be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
testRunner.And("I Sign out from MyRHI successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Apply for MMSP  without bank details, A", SourceLine=74)]
        public virtual void ApplyForMMSPWithoutBankDetails_A()
        {
#line 58
this.ApplyForMMSPWithoutBankDetails("A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Apply for MMSP  without bank details, B", SourceLine=74)]
        public virtual void ApplyForMMSPWithoutBankDetails_B()
        {
#line 58
this.ApplyForMMSPWithoutBankDetails("B", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Apply for MMSP  without bank details, C", SourceLine=74)]
        public virtual void ApplyForMMSPWithoutBankDetails_C()
        {
#line 58
this.ApplyForMMSPWithoutBankDetails("C", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Apply for MMSP  without bank details, G", SourceLine=74)]
        public virtual void ApplyForMMSPWithoutBankDetails_G()
        {
#line 58
this.ApplyForMMSPWithoutBankDetails("G", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Apply for MMSP  without bank details, S", SourceLine=74)]
        public virtual void ApplyForMMSPWithoutBankDetails_S()
        {
#line 58
this.ApplyForMMSPWithoutBankDetails("S", ((string[])(null)));
#line hidden
        }
        
        public virtual void CreateAnAdditionalApplicationWithoutBankDetails(string mcsNumber, string additionalTechnology, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create an additional application without bank details", exampleTags);
#line 82
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 83
testRunner.When(string.Format("I enter {0} for a given technology", mcsNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
testRunner.And("I create a deemed application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
testRunner.And("I click on Start application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
testRunner.And("I complete the second page of the application form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
testRunner.And("I click submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
testRunner.Then("application  In-Review message should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 89
testRunner.When("I click Sign-In button on Homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
testRunner.And("I enter Username and Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
testRunner.When("I click Sign-In into MyRhi", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
testRunner.Then("I should be logged into the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
testRunner.And("the Bank details button should be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
testRunner.When(string.Format("I create a deemed \"{0}\" additional application", additionalTechnology), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
testRunner.And("I click submit additional application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
testRunner.Then("I should see new message to enter bank details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
testRunner.And("I Sign out from MyRHI successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create an additional application without bank details, A", SourceLine=99)]
        public virtual void CreateAnAdditionalApplicationWithoutBankDetails_A()
        {
#line 82
this.CreateAnAdditionalApplicationWithoutBankDetails("A", "A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create an additional application without bank details, B", SourceLine=99)]
        public virtual void CreateAnAdditionalApplicationWithoutBankDetails_B()
        {
#line 82
this.CreateAnAdditionalApplicationWithoutBankDetails("B", "B", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create an additional application without bank details, C", SourceLine=99)]
        public virtual void CreateAnAdditionalApplicationWithoutBankDetails_C()
        {
#line 82
this.CreateAnAdditionalApplicationWithoutBankDetails("C", "C", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create an additional application without bank details, G", SourceLine=99)]
        public virtual void CreateAnAdditionalApplicationWithoutBankDetails_G()
        {
#line 82
this.CreateAnAdditionalApplicationWithoutBankDetails("G", "G", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create an additional application without bank details, H", SourceLine=99)]
        public virtual void CreateAnAdditionalApplicationWithoutBankDetails_H()
        {
#line 82
this.CreateAnAdditionalApplicationWithoutBankDetails("H", "H", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create an additional application without bank details, W", SourceLine=99)]
        public virtual void CreateAnAdditionalApplicationWithoutBankDetails_W()
        {
#line 82
this.CreateAnAdditionalApplicationWithoutBankDetails("W", "W", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create an additional application without bank details, X", SourceLine=99)]
        public virtual void CreateAnAdditionalApplicationWithoutBankDetails_X()
        {
#line 82
this.CreateAnAdditionalApplicationWithoutBankDetails("X", "X", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create an additional application without bank details, S", SourceLine=99)]
        public virtual void CreateAnAdditionalApplicationWithoutBankDetails_S()
        {
#line 82
this.CreateAnAdditionalApplicationWithoutBankDetails("S", "S", ((string[])(null)));
#line hidden
        }
        
        public virtual void BankAccountDetailsVisibility(string mcsNumber, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bank account details visibility", exampleTags);
#line 110
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 111
testRunner.When(string.Format("I enter {0} for a given technology", mcsNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
testRunner.When("I apply as an organisation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
testRunner.And("I create a deemed application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
testRunner.And("I select The property as England", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
testRunner.And("I click on Start application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
testRunner.And("the product is eligible for MMSP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
testRunner.And("I complete the second page of the application form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
testRunner.And("I click Yes to metering and monitoring", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
testRunner.Then("Bank details section should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 120
testRunner.But("If I click No to metering and monitoring", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "But ");
#line 121
testRunner.Then("Bank details section should not be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Bank account details visibility, A", SourceLine=123)]
        public virtual void BankAccountDetailsVisibility_A()
        {
#line 110
this.BankAccountDetailsVisibility("A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Bank account details visibility, B", SourceLine=123)]
        public virtual void BankAccountDetailsVisibility_B()
        {
#line 110
this.BankAccountDetailsVisibility("B", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Bank account details visibility, C", SourceLine=123)]
        public virtual void BankAccountDetailsVisibility_C()
        {
#line 110
this.BankAccountDetailsVisibility("C", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Bank account details visibility, G", SourceLine=123)]
        public virtual void BankAccountDetailsVisibility_G()
        {
#line 110
this.BankAccountDetailsVisibility("G", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Bank account details visibility, H", SourceLine=123)]
        public virtual void BankAccountDetailsVisibility_H()
        {
#line 110
this.BankAccountDetailsVisibility("H", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Bank account details visibility, W", SourceLine=123)]
        public virtual void BankAccountDetailsVisibility_W()
        {
#line 110
this.BankAccountDetailsVisibility("W", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Bank account details visibility, S", SourceLine=123)]
        public virtual void BankAccountDetailsVisibility_S()
        {
#line 110
this.BankAccountDetailsVisibility("S", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Bank account details visibility, X", SourceLine=123)]
        public virtual void BankAccountDetailsVisibility_X()
        {
#line 110
this.BankAccountDetailsVisibility("X", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

