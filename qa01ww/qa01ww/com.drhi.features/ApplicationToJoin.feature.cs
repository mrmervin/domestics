// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace qa01ww.Com_Drhi_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Application form", new string[] {
            "Browser_Chrome"}, Description="  A test to submit an application and confirmation message is displayed", SourceFile="com.drhi.features\\ApplicationToJoin.feature", SourceLine=3)]
    public partial class ApplicationFormFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ApplicationToJoin.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Application form", "  A test to submit an application and confirmation message is displayed", ProgrammingLanguage.CSharp, new string[] {
                        "Browser_Chrome"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void CreateDeemedApplications(string mcsnumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DeemedApplications",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create deemed applications", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 10
testRunner.Given("I am on homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
testRunner.And("I am not with an Investor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
testRunner.And("I am an individual", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
testRunner.And("I am a heating system sole owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
testRunner.And("I am an owner occupier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
testRunner.When(string.Format("I enter {0} for a given technology", mcsnumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
testRunner.And("I answer Yes for own money used", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
testRunner.And("I create a deemed application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
testRunner.And("I select No for Additional funding", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
testRunner.And("I enter EPC number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
testRunner.And("I select NO for multiple MCS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
testRunner.And("I select what buildings are heated by the heating system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
testRunner.And("I select system provides heat for hot water", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.And("I select Yes if anyone live in the property before commisioning date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
testRunner.And("I select The property as England", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.And("I click on Start application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
testRunner.And("I complete the second page of the application form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
testRunner.And("I click submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
testRunner.Then("application  In-Review message should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create deemed applications, A", new string[] {
                "DeemedApplications",
                "Regression"}, SourceLine=30)]
        public virtual void CreateDeemedApplications_A()
        {
#line 8
this.CreateDeemedApplications("A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create deemed applications, B", new string[] {
                "DeemedApplications",
                "Regression"}, SourceLine=30)]
        public virtual void CreateDeemedApplications_B()
        {
#line 8
this.CreateDeemedApplications("B", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create deemed applications, C", new string[] {
                "DeemedApplications",
                "Regression"}, SourceLine=30)]
        public virtual void CreateDeemedApplications_C()
        {
#line 8
this.CreateDeemedApplications("C", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create deemed applications, G", new string[] {
                "DeemedApplications",
                "Regression"}, SourceLine=30)]
        public virtual void CreateDeemedApplications_G()
        {
#line 8
this.CreateDeemedApplications("G", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create deemed applications, H", new string[] {
                "DeemedApplications",
                "Regression"}, SourceLine=30)]
        public virtual void CreateDeemedApplications_H()
        {
#line 8
this.CreateDeemedApplications("H", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create deemed applications, W", new string[] {
                "DeemedApplications",
                "Regression"}, SourceLine=30)]
        public virtual void CreateDeemedApplications_W()
        {
#line 8
this.CreateDeemedApplications("W", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create deemed applications, X", new string[] {
                "DeemedApplications",
                "Regression"}, SourceLine=30)]
        public virtual void CreateDeemedApplications_X()
        {
#line 8
this.CreateDeemedApplications("X", ((string[])(null)));
#line hidden
        }
        
        public virtual void CreateMeteredApplication(string mcsnumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "meteredApplication",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create metered application", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.Given("I am on homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
testRunner.And("I am not with an Investor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
testRunner.And("I am an individual", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
testRunner.And("I am a heating system sole owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
testRunner.And("I am an owner occupier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
testRunner.When(string.Format("I enter {0} for a given technology", mcsnumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
testRunner.And("I select No for Additional funding", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
testRunner.And("I enter EPC number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.And("I select NO for multiple MCS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.And("I answer Yes for own money used", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
testRunner.And("I create a metered application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("I select what buildings are heated by the heating system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.And("I select system provides heat for hot water", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
testRunner.And("I select Yes if anyone live in the property before commisioning date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
testRunner.And("I select The property as England", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
testRunner.And("I click on Start application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
testRunner.And("I complete the second page of the application form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
testRunner.And("I click submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
testRunner.Then("application  In-Review message should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create metered application, A", new string[] {
                "meteredApplication",
                "Regression"}, SourceLine=61)]
        public virtual void CreateMeteredApplication_A()
        {
#line 40
this.CreateMeteredApplication("A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create metered application, B", new string[] {
                "meteredApplication",
                "Regression"}, SourceLine=61)]
        public virtual void CreateMeteredApplication_B()
        {
#line 40
this.CreateMeteredApplication("B", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create metered application, C", new string[] {
                "meteredApplication",
                "Regression"}, SourceLine=61)]
        public virtual void CreateMeteredApplication_C()
        {
#line 40
this.CreateMeteredApplication("C", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create metered application, G", new string[] {
                "meteredApplication",
                "Regression"}, SourceLine=61)]
        public virtual void CreateMeteredApplication_G()
        {
#line 40
this.CreateMeteredApplication("G", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create metered application, H", new string[] {
                "meteredApplication",
                "Regression"}, SourceLine=61)]
        public virtual void CreateMeteredApplication_H()
        {
#line 40
this.CreateMeteredApplication("H", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create metered application, W", new string[] {
                "meteredApplication",
                "Regression"}, SourceLine=61)]
        public virtual void CreateMeteredApplication_W()
        {
#line 40
this.CreateMeteredApplication("W", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create metered application, X", new string[] {
                "meteredApplication",
                "Regression"}, SourceLine=61)]
        public virtual void CreateMeteredApplication_X()
        {
#line 40
this.CreateMeteredApplication("X", ((string[])(null)));
#line hidden
        }
        
        public virtual void CreateAssistedDigitalApplication(string mcsnumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AssistedDigital",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create assisted digital application", @__tags);
#line 71
this.ScenarioSetup(scenarioInfo);
#line 72
testRunner.Given("I am logged in as CSA", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
testRunner.And("I am on Rhita", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
testRunner.And("I click on assisted application button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
testRunner.And("I am an individual", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
testRunner.And("I am a heating system sole owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
testRunner.And("I am an owner occupier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
testRunner.And("I am not with an Investor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
testRunner.When("I answer Yes for own money used", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
testRunner.And("I select NO for multiple MCS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
testRunner.And("I select No for Additional funding", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
testRunner.And("I enter EPC number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
testRunner.And(string.Format("I enter {0} for a given technology", mcsnumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
testRunner.And("I create a deemed application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
testRunner.And("I select what buildings are heated by the heating system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
testRunner.And("I select system provides heat for hot water", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
testRunner.And("I select Yes if anyone live in the property before commisioning date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
testRunner.And("I select The property as England", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
testRunner.And("I click on Start application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
testRunner.And("I complete the second page of the application form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
testRunner.And("I click submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
testRunner.Then("application  In-Review message should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create assisted digital application, A", new string[] {
                "AssistedDigital",
                "Regression"}, SourceLine=94)]
        public virtual void CreateAssistedDigitalApplication_A()
        {
#line 71
this.CreateAssistedDigitalApplication("A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create assisted digital application, B", new string[] {
                "AssistedDigital",
                "Regression"}, SourceLine=94)]
        public virtual void CreateAssistedDigitalApplication_B()
        {
#line 71
this.CreateAssistedDigitalApplication("B", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create assisted digital application, C", new string[] {
                "AssistedDigital",
                "Regression"}, SourceLine=94)]
        public virtual void CreateAssistedDigitalApplication_C()
        {
#line 71
this.CreateAssistedDigitalApplication("C", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create assisted digital application, G", new string[] {
                "AssistedDigital",
                "Regression"}, SourceLine=94)]
        public virtual void CreateAssistedDigitalApplication_G()
        {
#line 71
this.CreateAssistedDigitalApplication("G", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create assisted digital application, H", new string[] {
                "AssistedDigital",
                "Regression"}, SourceLine=94)]
        public virtual void CreateAssistedDigitalApplication_H()
        {
#line 71
this.CreateAssistedDigitalApplication("H", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create assisted digital application, W", new string[] {
                "AssistedDigital",
                "Regression"}, SourceLine=94)]
        public virtual void CreateAssistedDigitalApplication_W()
        {
#line 71
this.CreateAssistedDigitalApplication("W", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create assisted digital application, X", new string[] {
                "AssistedDigital",
                "Regression"}, SourceLine=94)]
        public virtual void CreateAssistedDigitalApplication_X()
        {
#line 71
this.CreateAssistedDigitalApplication("X", ((string[])(null)));
#line hidden
        }
        
        public virtual void CreateApplicationRepresentingAnOrganisation(string mcsnumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Organisation",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create application representing an organisation", @__tags);
#line 104
this.ScenarioSetup(scenarioInfo);
#line 105
testRunner.Given("I am on homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 106
testRunner.And("I am a heating system sole owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
testRunner.And("I am not with an Investor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
testRunner.When(string.Format("I enter {0} for a given technology", mcsnumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
testRunner.And("I select NO for multiple MCS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
testRunner.And("I select No for Additional funding", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
testRunner.And("I select what buildings are heated by the heating system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
testRunner.And("I select system provides heat for hot water", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
testRunner.And("I select Yes if anyone live in the property before commisioning date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
testRunner.And("I enter EPC number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
testRunner.And("I answer Yes for own money used", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
testRunner.And("I apply as an organisation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
testRunner.And("I create a deemed application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
testRunner.And("I select The property as England", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
testRunner.And("I click on Start application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
testRunner.And("I complete the second page of the application form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
testRunner.And("I click submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
testRunner.Then("application  In-Review message should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create application representing an organisation, A", new string[] {
                "Organisation",
                "Regression"}, SourceLine=124)]
        public virtual void CreateApplicationRepresentingAnOrganisation_A()
        {
#line 104
this.CreateApplicationRepresentingAnOrganisation("A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create application representing an organisation, B", new string[] {
                "Organisation",
                "Regression"}, SourceLine=124)]
        public virtual void CreateApplicationRepresentingAnOrganisation_B()
        {
#line 104
this.CreateApplicationRepresentingAnOrganisation("B", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create application representing an organisation, C", new string[] {
                "Organisation",
                "Regression"}, SourceLine=124)]
        public virtual void CreateApplicationRepresentingAnOrganisation_C()
        {
#line 104
this.CreateApplicationRepresentingAnOrganisation("C", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create application representing an organisation, G", new string[] {
                "Organisation",
                "Regression"}, SourceLine=124)]
        public virtual void CreateApplicationRepresentingAnOrganisation_G()
        {
#line 104
this.CreateApplicationRepresentingAnOrganisation("G", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create application representing an organisation, H", new string[] {
                "Organisation",
                "Regression"}, SourceLine=124)]
        public virtual void CreateApplicationRepresentingAnOrganisation_H()
        {
#line 104
this.CreateApplicationRepresentingAnOrganisation("H", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create application representing an organisation, W", new string[] {
                "Organisation",
                "Regression"}, SourceLine=124)]
        public virtual void CreateApplicationRepresentingAnOrganisation_W()
        {
#line 104
this.CreateApplicationRepresentingAnOrganisation("W", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create application representing an organisation, X", new string[] {
                "Organisation",
                "Regression"}, SourceLine=124)]
        public virtual void CreateApplicationRepresentingAnOrganisation_X()
        {
#line 104
this.CreateApplicationRepresentingAnOrganisation("X", ((string[])(null)));
#line hidden
        }
        
        public virtual void CreateApplicationWhichIsAuto_Accredited(string technology, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Auto-Accredited",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create application which is auto-accredited", @__tags);
#line 134
this.ScenarioSetup(scenarioInfo);
#line 135
testRunner.Given(string.Format("I am completing the \"{0}\" application process", technology), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 136
testRunner.When("I click submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 137
testRunner.Then("application should be Auto-accredited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create application which is auto-accredited, s", new string[] {
                "Auto-Accredited",
                "Regression"}, SourceLine=139)]
        public virtual void CreateApplicationWhichIsAuto_Accredited_S()
        {
#line 134
this.CreateApplicationWhichIsAuto_Accredited("s", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create application which is auto-accredited, k", new string[] {
                "Auto-Accredited",
                "Regression"}, SourceLine=139)]
        public virtual void CreateApplicationWhichIsAuto_Accredited_K()
        {
#line 134
this.CreateApplicationWhichIsAuto_Accredited("k", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

